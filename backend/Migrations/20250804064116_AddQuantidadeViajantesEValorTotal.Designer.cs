// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using agencia.Data;

#nullable disable

namespace agencia.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250804064116_AddQuantidadeViajantesEValorTotal")]
    partial class AddQuantidadeViajantesEValorTotal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("agencia.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COMENTARIO");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_AVALIACAO");

                    b.Property<int>("ID_RESERVA")
                        .HasColumnType("int");

                    b.Property<int>("Nota")
                        .HasColumnType("int")
                        .HasColumnName("NOTA");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int")
                        .HasColumnName("ID_RESERVA");

                    b.HasKey("Id");

                    b.HasIndex("ID_RESERVA");

                    b.ToTable("TB_AVALIACOES", t =>
                        {
                            t.Property("ID_RESERVA")
                                .HasColumnName("ID_RESERVA1");
                        });
                });

            modelBuilder.Entity("agencia.Models.HistoricoPacote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("ATUALIZADO_EM");

                    b.Property<string>("AtualizadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ATUALIZADO_POR");

                    b.Property<string>("Categorias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CATEGORIAS");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CRIADO_POR");

                    b.Property<DateTime>("DataDisponivel")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_DISPONIVEL");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESTINO");

                    b.Property<int>("Duracao")
                        .HasColumnType("int")
                        .HasColumnName("DURACAO");

                    b.Property<int>("Estrelas")
                        .HasColumnType("int")
                        .HasColumnName("ESTRELAS");

                    b.Property<int>("PacoteId")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeMaximaPessoas")
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE_MAXIMA");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TITULO");

                    b.Property<int>("VERSAO")
                        .HasColumnType("int")
                        .HasColumnName("VERSÃO");

                    b.Property<float>("ValorTotal")
                        .HasColumnType("real")
                        .HasColumnName("VALOR_TOTAL");

                    b.HasKey("Id");

                    b.ToTable("PacotesHistorico");
                });

            modelBuilder.Entity("agencia.Models.ImagemPacote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("HistoricoPacoteId")
                        .HasColumnType("int");

                    b.Property<int>("PacoteId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HistoricoPacoteId");

                    b.HasIndex("PacoteId");

                    b.ToTable("ImagensPacote");
                });

            modelBuilder.Entity("agencia.Models.Midia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PACOTE_ID")
                        .HasColumnType("int");

                    b.Property<int>("PacoteId")
                        .HasColumnType("int")
                        .HasColumnName("PACOTE_ID");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TIPO");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.HasIndex("PACOTE_ID");

                    b.ToTable("TB_MIDIAS", t =>
                        {
                            t.Property("PACOTE_ID")
                                .HasColumnName("PACOTE_ID1");
                        });
                });

            modelBuilder.Entity("agencia.Models.Pacote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("ATUALIZADO_EM");

                    b.Property<string>("AtualizadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ATUALIZADO_POR");

                    b.Property<string>("Categorias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CATEGORIAS");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CRIADO_POR");

                    b.Property<DateTime>("DataDisponivel")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_DISPONIVEL");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESTINO");

                    b.Property<int>("Duracao")
                        .HasColumnType("int")
                        .HasColumnName("DURACAO");

                    b.Property<int>("Estrelas")
                        .HasColumnType("int")
                        .HasColumnName("ESTRELAS");

                    b.Property<int?>("PromocaoId")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeMaximaPessoas")
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE_MAXIMA");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TITULO");

                    b.Property<int>("VERSAO")
                        .HasColumnType("int")
                        .HasColumnName("VERSÃO");

                    b.Property<float>("ValorTotal")
                        .HasColumnType("real")
                        .HasColumnName("VALOR_TOTAL");

                    b.HasKey("Id");

                    b.HasIndex("PromocaoId");

                    b.ToTable("TB_PACOTES");
                });

            modelBuilder.Entity("agencia.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_PAGAMENTO");

                    b.Property<string>("FormaDePagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FORMA_DE_PAGAMENTO");

                    b.Property<int>("ID_RESERVA")
                        .HasColumnType("int");

                    b.Property<string>("StatusPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("STATUS_PAGAMENTO");

                    b.Property<float>("Valor")
                        .HasColumnType("real")
                        .HasColumnName("VALOR");

                    b.HasKey("Id");

                    b.HasIndex("ID_RESERVA");

                    b.ToTable("TB_PAGAMENTOS");
                });

            modelBuilder.Entity("agencia.Models.Promocao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_FIM");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_INICIO");

                    b.Property<float>("DescontoPercentual")
                        .HasColumnType("real")
                        .HasColumnName("DESCONTO_PERCENTUAL");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("TB_PROMOCOES");
                });

            modelBuilder.Entity("agencia.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_RESERVA");

                    b.Property<int>("NumeroReserva")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO_RESERVA");

                    b.Property<int>("PacoteId")
                        .HasColumnType("int")
                        .HasColumnName("PACOTE_ID");

                    b.Property<int?>("QuantidadeViajantes")
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE_VIAJANTES");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("STATUS");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("USUARIO_ID");

                    b.Property<decimal?>("ValorTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_TOTAL");

                    b.Property<float>("ValorUnitario")
                        .HasColumnType("real")
                        .HasColumnName("VALOR_UNITARIO");

                    b.HasKey("Id");

                    b.HasIndex("PacoteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_RESERVAS");
                });

            modelBuilder.Entity("agencia.Models.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NUMERO_DOCUMENTO");

                    b.Property<string>("TipoDocumentoNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TIPO_DOCUMENTO");

                    b.Property<int>("USUARIO_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("USUARIO_ID");

                    b.ToTable("TB_DOCUMENTOS");
                });

            modelBuilder.Entity("agencia.Models.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("TB_TIPO_USUARIO");
                });

            modelBuilder.Entity("agencia.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMAIL");

                    b.Property<bool>("EmailConfirmado")
                        .HasColumnType("bit")
                        .HasColumnName("EMAIL_COMFIRMADO");

                    b.Property<DateTime?>("ExpiracaoTokenConfirmacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("TOKEN_EXPIRACAO_EMAILCONFIRMADO");

                    b.Property<DateTime?>("ExpiracaoTokenRecuperacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("TOKEN_EXPIRACAO_RECUPERACAO_SENHA");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SENHA");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELEFONE");

                    b.Property<int>("TipoUsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_USUARIO_ID");

                    b.Property<string>("TokenConfirmacaoEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TOKEN_EMAILCONFIRMADO");

                    b.Property<string>("TokenRecuperacaoSenha")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TOKEN_RECUPERACAO_SENHA");

                    b.HasKey("Id");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("TB_USUARIOS");
                });

            modelBuilder.Entity("agencia.Models.Viajante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DOCUMENTO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME");

                    b.Property<string>("Passaporte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PASSAPORTE");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int")
                        .HasColumnName("ID_RESERVA");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("TB_VIAGANTES");
                });

            modelBuilder.Entity("agencia.Models.VideoPacote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("HistoricoPacoteId")
                        .HasColumnType("int");

                    b.Property<int>("PacoteId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HistoricoPacoteId");

                    b.HasIndex("PacoteId");

                    b.ToTable("VideosPacote");
                });

            modelBuilder.Entity("agencia.Models.Avaliacao", b =>
                {
                    b.HasOne("agencia.Models.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("ID_RESERVA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("agencia.Models.ImagemPacote", b =>
                {
                    b.HasOne("agencia.Models.HistoricoPacote", null)
                        .WithMany("Imagens")
                        .HasForeignKey("HistoricoPacoteId");

                    b.HasOne("agencia.Models.Pacote", "Pacote")
                        .WithMany("Imagens")
                        .HasForeignKey("PacoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacote");
                });

            modelBuilder.Entity("agencia.Models.Midia", b =>
                {
                    b.HasOne("agencia.Models.Pacote", "Pacote")
                        .WithMany()
                        .HasForeignKey("PACOTE_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacote");
                });

            modelBuilder.Entity("agencia.Models.Pacote", b =>
                {
                    b.HasOne("agencia.Models.Promocao", null)
                        .WithMany("Pacotes")
                        .HasForeignKey("PromocaoId");
                });

            modelBuilder.Entity("agencia.Models.Pagamento", b =>
                {
                    b.HasOne("agencia.Models.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("ID_RESERVA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("agencia.Models.Reserva", b =>
                {
                    b.HasOne("agencia.Models.Pacote", "Pacote")
                        .WithMany()
                        .HasForeignKey("PacoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("agencia.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacote");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("agencia.Models.TipoDocumento", b =>
                {
                    b.HasOne("agencia.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("USUARIO_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("agencia.Models.Usuario", b =>
                {
                    b.HasOne("agencia.Models.TipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("agencia.Models.Viajante", b =>
                {
                    b.HasOne("agencia.Models.Reserva", "Reserva")
                        .WithMany("Viajantes")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("agencia.Models.VideoPacote", b =>
                {
                    b.HasOne("agencia.Models.HistoricoPacote", null)
                        .WithMany("Videos")
                        .HasForeignKey("HistoricoPacoteId");

                    b.HasOne("agencia.Models.Pacote", "Pacote")
                        .WithMany("Videos")
                        .HasForeignKey("PacoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacote");
                });

            modelBuilder.Entity("agencia.Models.HistoricoPacote", b =>
                {
                    b.Navigation("Imagens");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("agencia.Models.Pacote", b =>
                {
                    b.Navigation("Imagens");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("agencia.Models.Promocao", b =>
                {
                    b.Navigation("Pacotes");
                });

            modelBuilder.Entity("agencia.Models.Reserva", b =>
                {
                    b.Navigation("Viajantes");
                });
#pragma warning restore 612, 618
        }
    }
}
